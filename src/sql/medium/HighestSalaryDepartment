/*
The Employee table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.

+----+-------+--------+--------------+
| Id | Name  | Salary | DepartmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 70000  | 1            |
| 2  | Henry | 80000  | 2            |
| 3  | Sam   | 60000  | 2            |
| 4  | Max   | 90000  | 1            |
+----+-------+--------+--------------+
The Department table holds all departments of the company.

+----+----------+
| Id | Name     |
+----+----------+
| 1  | IT       |
| 2  | Sales    |
+----+----------+
Write a SQL query to find employees who have the highest salary in each of the departments. For the above tables,
Max has the highest salary in the IT department and Henry has the highest salary in the Sales department.

+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| Sales      | Henry    | 80000  |
+------------+----------+--------+
 */
SELECT d.Name AS Department,e.name AS Employee , (e.Salary) AS Salary
FROM Employee AS e JOIN Department AS d ON e.DepartmentId=d.Id
WHERE ((e.DepartmentId , Salary) IN (SELECT DepartmentId, MAX(Salary) FROM e GROUP BY DepartmentId));

-- Since the Employee table contains the Salary and DepartmentId information, we can query the highest salary in a department.
SELECT DepartmentId, MAX(Salary) FROM Employee GROUP BY DepartmentId;
-- There might be multiple employees having the same highest salary, so it is safe not to include the employee name information in this query.